
<project name="slf4j" default="usage" basedir=".">

	<!-- The build.properties file defines the path to local files -->
	<property file="build.properties" />

	<property file="local.properties" />

	<property name="tmp.java.source.dir" value="./tmp/src" />
	<property name="tmp.javac.dest" value="./tmp/classes" />

	<property name="dist.images" value="dist/images" />
	<property name="dist.tmp" value="dist/tmp" />

	<property name="debug" value="on" />
	<property name="deprecation" value="on" />
	<property name="target" value="1.2" />
	<property name="source" value="1.2" />
		
	<property name="SLF4J_STEM" value="org/slf4j" />
	<property name="JCL_STEM" value="org/apache/commons/logging" />

	<!-- ================================================================= -->
	<!-- Default target                                                    -->
	<!-- ================================================================= -->
	<target name="usage">
		<echo>      
      These are some of the targets supported by this ANT build scpript:
      
      slf4j-nop.jar - build the jar file of the same name.
	  slf4j-mnop.jar - build the jar file of the same name.
      slf4j-simple.jar - build the jar file of the same name.
      slf4j-log4j12.jar - build the jar file of the same name.
      slf4j-log4j13.jar - build the jar file of the same name.
	  slf4j-jdk14.jar - build the jar file of the same name.
      slf4j-jcl.jar - build the jar file of the same name.
      jcl-over-slf4j.jar - JCL 1.0.4 implemented over SLF4J	
      jar - all of the above jar files
    </echo>
	</target>

	<target name="init">
		<mkdir dir="tmp" />
		<mkdir dir="${tmp.java.source.dir}" />
		<mkdir dir="${tmp.javac.dest}" />
	</target>

	<path id="regular.classpath">
	</path>


	<path id="jcl.classpath">
		<fileset dir="./lib">
			<include name="commons-logging-1.0.4.jar" />
		</fileset>
	</path>
	
	<path id="log4j12.classpath">
		<fileset dir="./lib">
			<include name="log4j-1.2*.jar" />
		</fileset>
	</path>


	<path id="log4j13.classpath">
		<fileset dir="./lib">
			<include name="log4j-1.3*.jar" />
		</fileset>
	</path>

	<path id="javadoc.classpath">
		<path refid="jcl.classpath" />
		<path refid="log4j12.classpath" />
	</path>

	
	<!-- ================================================================= -->
	<!-- Remove all generated (compiled) class files.                      -->
	<!-- ================================================================= -->
	<target name="clean" description="Delete all compiled SLF4J files.">
		<delete dir="${javac.dest}/org/slf4j" />
	</target>


	<target name="julCheck">
		<available classname="java.util.logging.Logger" property="julPresent">
		</available>

		<fail unless="julPresent">
        Building the SLF4J implementation for JDK 1.4 logging 
        requires the presence of JDK 1.4 or later.
  	</fail>
	</target>

	<target name="log4j12Check">
		<available classname="org.apache.log4j.Logger" property="log4j12Present">
			<classpath refid="log4j12.classpath" />
		</available>

		<fail unless="log4j12Present">
        Building the SLF4J implementation for the log4j system 
        requires the presence of log4j 1.2.x.
  	</fail>
	</target>

	<target name="log4j13Check">
		<available classname="org.apache.log4j.Logger" property="log4j13Present">
			<classpath refid="log4j13.classpath" />
		</available>

		<fail unless="log4j13Present">
        Building the SLF4J implementation for the log4j system 
        requires the presence of log4j 1.3.x.
  	</fail>
	</target>

	<!-- test-compile.jar is useful during testing of SLF4J itself. 
	     The actual binding is the Simple binding.
	 -->
	<target name="test-compile.jar" depends="init">
		<antcall target="compile-IMPL">
			<param name="IMPL" value="Simple" />
			<param name="IMPL.CLASSPATH" value="regular.classpath" />
		</antcall>

		<jar jarfile="test-compile.jar" 
			 basedir="${tmp.javac.dest}" 
			 includes="${SLF4J_STEM}/**/*.class">
		</jar>
	</target>
		
	<!-- compile.jar is useful during development of SLF4J itself. It contains
	  .class files for java files which cannot be compiled without prior 
	  filtering. The actual binding is the Simple binding.
	--> 
	<target name="compile.jar" depends="init">
		<antcall target="compile-IMPL">
			<param name="IMPL" value="Simple" />
			<param name="IMPL.CLASSPATH" value="regular.classpath" />
		</antcall>

		<jar jarfile="compile.jar" basedir="${tmp.javac.dest}" 
			 includes="${SLF4J_STEM}/impl/Static*Binder.class">
		</jar>
	</target>

	<!-- =================================================================== -->
	<!-- Generic target that can build NOP, Simple and JDK14 implementations -->
	<!--  as specified by the "jar-name" and "impl" parameters.              -->
	<!-- =================================================================== -->
	<target name="compile-IMPL" depends="init">
		<!-- delete all previously existing files in tmp -->
		<delete>
			<fileset dir="tmp/" includes="**/*" />
		</delete>

		<!-- copy a filtered version of slf4j to tmp/src -->
		<copy todir="${tmp.java.source.dir}">
			<fileset dir="src/filtered-java">
				<include name="**/*.java" />
			</fileset>
			<filterset>
				<filter token="IMPL" value="${IMPL}" />
			</filterset>
		</copy>

		<copy todir="${tmp.java.source.dir}/${SLF4J_STEM}">
			<fileset dir="./src/java/${SLF4J_STEM}">
				<include name="**/*.java" />
			</fileset>
		</copy>

		<javac srcdir="${tmp.java.source.dir}" destdir="${tmp.javac.dest}" 
			   deprecation="on"
			   target="${target}"
		       source="${source}"
		       includes="${SLF4J_STEM}/*.java,
    	             ${SLF4J_STEM}/impl/MessageFormatter.java,
    	             ${SLF4J_STEM}/impl/Util.java
                     ${SLF4J_STEM}/impl/${IMPL}*.java
    	             ${SLF4J_STEM}/spi/*.java" 
			         debug="${debug}">
			<classpath refid="${IMPL.CLASSPATH}" />
		</javac>

	</target>

	<!-- ====================================================================== -->
	<!-- Generic target that can build NOP, Simple, log4j and JDK14             -->
	<!-- implementations as specified by the "jar-name" and "impl" parameters.  -->
	<!-- ====================================================================== -->
	<target name="slf4j-IMPL.jar" depends="init">

		<antcall target="compile-IMPL">
			<param name="IMPL" value="${IMPL}" />
			<param name="IMPL.CLASSPATH" value="${IMPL.CLASSPATH}" />
		</antcall>

		<jar jarfile="${jar-name}" 
			 index="true" 
			 basedir="${tmp.javac.dest}" 
			 includes="${SLF4J_STEM}/I*.class,
			      ${SLF4J_STEM}/Logger*.class,
			      ${SLF4J_STEM}/Marker*.class,
			      ${SLF4J_STEM}/spi/*FactoryBinder.class,
                  ${SLF4J_STEM}/impl/MessageFormatter.class,
    	          ${SLF4J_STEM}/impl/Util.class,
			      ${SLF4J_STEM}/impl/MarkerIgnoringBase.class,
			      ${SLF4J_STEM}/impl/BasicMarker*.class,
		          ${SLF4J_STEM}/impl/Static*Binder.class,
                  ${SLF4J_STEM}/impl/${IMPL}*.class">
			<manifest>
				<section name="org/slf4j/">
					<attribute name="Implementation-Title" value="${IMPL} implementation" />
					<attribute name="Implementation-Version" value="${version}" />
					<attribute name="Implementation-Vendor" value="SLF4J.ORG" />
				</section>
			</manifest>
		</jar>
		
		
		<jar jarfile="${sourcejar-name}" index="true" 
		     basedir="tmp/src" 
		     includes="${SLF4J_STEM}/I*.java, 
		               ${SLF4J_STEM}/Logger*.java, 
		               ${SLF4J_STEM}/Marker*.java, 
		               ${SLF4J_STEM}/spi/*FactoryBinder.java, 
		               ${SLF4J_STEM}/impl/MessageFormatter.java, 
		               ${SLF4J_STEM}/impl/Util.java, 
		               ${SLF4J_STEM}/impl/MarkerIgnoringBase.java, 
		               ${SLF4J_STEM}/impl/BasicMarker*.java, 
		               ${SLF4J_STEM}/impl/Static*Binder.java, 
		               ${SLF4J_STEM}/impl/${IMPL}*.java"> 
		  <manifest> 
		    <section name="org/slf4j/"> 
		      <attribute name="Implementation-Title" value="${IMPL} implementation" /> 
		      <attribute name="Implementation-Version" value="${version}" /> 
		      <attribute name="Implementation-Vendor" value="SLF4J.ORG" /> 
		    </section> 
		  </manifest> 
		</jar>
	</target>

	<target name="slf4j-nop.jar">
		<antcall target="slf4j-IMPL.jar">
			<param name="IMPL" value="NOP" />
			<param name="jar-name" value="slf4j-nop.jar" />
			<param name="sourcejar-name" value="slf4j-nop-sources.jar" />
			<param name="IMPL.CLASSPATH" value="regular.classpath" />
		</antcall>
	</target>

	<target name="slf4j-simple.jar">
		<antcall target="slf4j-IMPL.jar">
			<param name="IMPL" value="Simple" />
			<param name="jar-name" value="slf4j-simple.jar" />
			<param name="sourcejar-name" value="slf4j-simple-sources.jar" />
			<param name="IMPL.CLASSPATH" value="regular.classpath" />
		</antcall>
	</target>

	<target name="slf4j-log4j12.jar" depends="log4j12Check">
		<antcall target="slf4j-IMPL.jar">
			<param name="IMPL" value="Log4j" />
			<param name="jar-name" value="slf4j-log4j12.jar" />
			<param name="sourcejar-name" value="slf4j-log4j12-sources.jar" />
			<param name="IMPL.CLASSPATH" value="log4j12.classpath" />
		</antcall>
	</target>

	<target name="slf4j-log4j13.jar" depends="log4j13Check">
		<antcall target="slf4j-IMPL.jar">
			<param name="IMPL" value="Log4j" />
			<param name="jar-name" value="slf4j-log4j13.jar" />
			<param name="sourcejar-name" value="slf4j-log4j13-sources.jar" />
			<param name="IMPL.CLASSPATH" value="log4j13.classpath" />
		</antcall>
	</target>

	<target name="slf4j-jdk14.jar" depends="julCheck">
		<antcall target="slf4j-IMPL.jar">
			<param name="IMPL" value="JDK14" />
			<param name="jar-name" value="slf4j-jdk14.jar" />
			<param name="sourcejar-name" value="slf4j-jdk14-sources.jar" />
			<param name="IMPL.CLASSPATH" value="regular.classpath" />
		</antcall>
	</target>

	<target name="slf4j-jcl.jar" depends="julCheck">
		<antcall target="slf4j-IMPL.jar">
			<param name="IMPL" value="JCL" />
			<param name="jar-name" value="slf4j-jcl.jar" />
			<param name="sourcejar-name" value="slf4j-jcl-sources.jar" />
			<param name="IMPL.CLASSPATH" value="jcl.classpath" />
		</antcall>
	</target>
				
	<target name="jcl-over-slf4j.jar" depends="slf4j-nop.jar">

		<copy todir="${tmp.java.source.dir}/${JCL_STEM}">
		  <fileset dir="./src/java/${JCL_STEM}">
		    <include name="**/*.java" />
	      </fileset>
		</copy>

		<javac srcdir="${tmp.java.source.dir}" destdir="${tmp.javac.dest}" 
			   deprecation="on" 
			   target="${target}"
			   source="${source}"   
			   includes="${JCL_STEM}/**/*.java" debug="${debug}">
		</javac>

		<!-- copy SPI file into META-INF -->
		<copy todir="${tmp.javac.dest}/META-INF">
	  	  <fileset dir="./src/resources/JCL/META-INF">
		    <include name="**/*" />
		  </fileset>
		</copy>
			
		<jar jarfile="${jcl.jar}" 
			index="true"
			basedir="${tmp.javac.dest}" 
			includes="${JCL_STEM}/**/*.class,
			          META-INF/**/*">
			<manifest>
				<section name="org/apache/commons/logging">
					<attribute name="Implementation-Title" value="JCL over SLF4J" />
					<attribute name="Implementation-Version" value="${jcl-version}" />
					<attribute name="Implementation-Vendor" value="SLF4J.ORG" />
				</section>
			</manifest>
		</jar>
	</target>


	<target name="jar" depends="compile.jar, test-compile.jar, slf4j-nop.jar, jcl-over-slf4j.jar, 
		                        slf4j-log4j12.jar, slf4j-log4j13.jar, 
		                        slf4j-simple.jar, slf4j-jdk14.jar, slf4j-jcl.jar" />

	<!-- Build Javadoc -->
	<target name="javadoc" depends="init">

		<!-- delete all previously existing files in tmp -->
		<delete>
			<fileset dir="tmp/" includes="**/*" />
		</delete>

		<!-- copy a filtered version of slf4j to tmp/src -->
		<copy todir="tmp/src">
			<fileset dir="src/filtered-java">
				<include name="**/*.java" />
			</fileset>
			<filterset>
				<filter token="IMPL" value="NOP" />
			</filterset>
			<filterset>
				<filter token="MARKER_FACTORY_IMPL_PREFIX" value="Basic" />
			</filterset>
		</copy>

		<copy todir="tmp/src/${SLF4J_STEM}">
			<fileset dir="src/java/${SLF4J_STEM}">
				<include name="**/*.java" />
				<include name="**/*.html" />
			</fileset>
		</copy>

		<mkdir dir="${javadoc.dest}" />

		<javadoc destdir="${javadoc.dest}" 
			     packagenames="org.slf4j.*" 
			     additionalparam="-breakiterator" 
			     version="true" 
			     protected="true" 
			     author="true" use="true" 
			     overview="src/docs/overview.html" 
			     doctitle="SLF4J version ${version}" windowtitle="SLF4J Version ${version}">

			<classpath refid="javadoc.classpath" />

			<link href="http://jakarta.apache.org/commons/logging/apidocs/"/>
			<link href="http://logging.apache.org/log4j/docs/api/"/>
			
			<sourcepath>
				<path path="${tmp.java.source.dir}" />
			</sourcepath>

			<group>
				<title>SLF4J</title>
				<package name="org.slf4j" />
				<package name="org.slf4j.impl" />
				<package name="org.slf4j.spi" />
			</group>

			<header>&lt;b&gt;SLF4J ${version}&lt;/b&gt;&lt;br/&gt;</header>
			
		<footer>
      	   Copyright 2004-2006 SLF4J.ORG, QOS.ch
      	</footer>
			
		<bottom>
    		
    	</bottom>
		</javadoc>
	</target>


	<target name="site">
		<ant dir="${slf4j-site}" antfile="build.xml" target="site" />
	</target>

	<!-- ================================================================= -->
	<!-- Build a complete distribution. Results go to ${dist.images}       -->
	<!-- ================================================================= -->
	<target name="dist" depends="init, clean, javadoc, jar, site">

		<delete verbose="true">
			<fileset dir=".">
				<patternset>
					<include name="**/*.bak" />
					<include name="${BSTEM}/**/temp*" />
				</patternset>
			</fileset>
		</delete>

		<mkdir dir="${dist.images}" />

		<mkdir dir="${dist.tmp}/slf4j-${version}" />

		<copy todir="${dist.tmp}/slf4j-${version}">
			<fileset dir="./" includes="src/**,            
               build.xml,
               build.properties,
               local.properties.sample,
               INSTALL.txt,
               LICENSE.txt,
      	       ${jcl.jar},
      	       slf4j-*.jar" excludes="**/*.bak, 
               **/.#*" />
		</copy>

		<copy todir="${dist.tmp}/slf4j-${version}">
			<fileset dir="${slf4j-site}/" includes="docs/**" excludes="docs/dist/**,
                         *.bak, 
                         **/.#*" />
		</copy>

		<tar tarfile="${dist.images}/slf4j-${version}.tar" basedir="${dist.tmp}" includes="slf4j-${version}/**" />

		<gzip src="${dist.images}/slf4j-${version}.tar" zipfile="${slf4j-site}/docs/dist/slf4j-${version}.tar.gz" />

		<zip zipfile="${slf4j-site}/docs/dist/slf4j-${version}.zip" basedir="${dist.tmp}" includes="slf4j-${version}/**" />

		<delete dir="${dist.tmp}" />
	</target>

</project>
