<?xml version="1.0" encoding="iso-8859-1"?>

<document>

  <properties>
    <author email="not@disclosed">Ceki Gülcü</author>
    <title>Log4j error codes</title>
  </properties>

  <body>

    <center>
      <h2>SLF4J warning or error messages and their meanings</h2>
      <h3>Ceki  G&#252;lc&#252; <br/>
      created May 2006, last updated on May 2006</h3>
    </center>
    

    <message ref="release">

      <title>The method
      <code>o.a.commons.logging.impl.SLF4FLogFactory#release</code>
      was invoked.</title>

      <explanation>
        <p>Given the structure of the commons-logging API, in
        particular as implemented by SLF4J, the
        <code>o.a.commons.logging.impl.SLF4FLogFactory#release()</code>
        method should never be called. However, depending on the
        deployment of <em>commons-logging.jar</em> files in your
        servlet container, <code>release()</code> may be unexpectedly
        invoked by a copy of
        <code>org.apache.commons.logging.LogFactory</code> class
        shipping with <em>commons-logging.jar</em>.
        </p>

        <p>This is a relatively common occurrence with recent versions
        of Tomcat, especially if you place
        <em>jcl104-over-slf4j.jar</em> in <em>WEB-INF/lib</em>
        directory of your web-application instead of
        <em>$TOMCAT_HOME/common/lib</em> where $TOMCAT_HOME stands for
        the directory where Tomcat is installed. In order to fully
        benefit from the stability offered by
        <em>jcl104-over-slf4j.jar</em>, we recommend that you place
        <em>jcl104-over-slf4j.jar</em> in
        <em>$TOMCAT_HOME/common/lib</em> without placing a copy in
        your web-applications.
        </p>

        <p>Please also see <a
        href="http://bugzilla.slf4j.org/show_bug.cgi?id=22">bug
        #22</a>.</p>
        
      </explanation>

    </message>

  </body>
</document>